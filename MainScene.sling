class is SpriteSceneWithEntities imports cape imports cave imports motion #mainScene:

depend "androidPermission:android.permission.WRITE_EXTERNAL_STORAGE"
depend "androidPermission:android.permission.READ_EXTERNAL_STORAGE"

var backgroundmain as TextureSprite
var height as double
var width as double
var playbutton as TextureSprite
var helpbutton as TextureSprite
var audioManager as AudioManager
var stream as AudioStream

func initialize override
{
	base.initialize()
	height = getReferenceHeight()
	width = getReferenceWidth()
	audioManager = AudioManager.forApplication(context)
	if(audioManager != null) {
		stream = audioManager.getStreamForResource("main")
	}
	backgroundmain = addTextureSpriteForSize(createTextureForImageResource("backgroundmain"), width, height)
	playbutton = addTextureSpriteForSize(createTextureForImageResource("playbutton"), 0.2 * width, 0.1 * height)
	playbutton.move(0.1 * width, 0.75 * height)
	helpbutton = addTextureSpriteForSize(createTextureForImageResource("help"), 0.2 * width, 0.1 * height)
	helpbutton.move(0.1 * width, 0.85 * height)
	onTimeToPlayStream()
}

// func onTimeToPlaySoundClip
// {
// 	if(clip != null) {
// 		clip.play()
// 	}
// }

func onTimeToPlayStream
{
	if(stream != null) {
		stream.play()
		stream.setLooping(true)
	}
}

func cleanup override
{
	//base.cleanup()
	removeSprite(backgroundmain)
	removeSprite(playbutton)
	// removeSprite(text)
}

func switchToGameScene
{
	stream.stop()
	pushScene(new GameScene())
}

func switchToHelpScene
{
	stream.stop()
	pushScene(new HelpScene())
}

func onPointerEvent(event as PointerEvent) override
{
	base.onPointerEvent(event)
	if(event.isConsumed) {
		return
	}
	if(event.action == PointerEvent.DOWN) {
		if(event.isInside(playbutton.getX(), playbutton.getY(), playbutton.getWidth(), playbutton.getHeight())) {
			switchToGameScene()
		}
		if(event.isInside(helpbutton.getX(), helpbutton.getY(), helpbutton.getWidth(), helpbutton.getHeight())) {
			switchToHelpScene()
		}
	}
}
